程式中竟然有不可預測其存活時間的資料存在

在程式中有部份的需求
總是在執行中依據實際情況才動態增減
這些資訊是難以被預測那時候開始有?
數量有多少?何時該回收?
這些不可預測的因素造成上述的 stack區 不適合運用在這

當資料為動態配置產生
系統會存放在另外一塊空間 稱之 Heap
Heap區塊專收執行期間動態產生的資料
由於為動態產生
故結束點無法由系統掌握

為何在寫C#都不需要注意回收空間的問題
因為C#中採用
Garbage Collection的機制自動檢測
在Heap中那些資料已經沒有被使用
當確認資料已經沒有被使用
系統就會自動將空間回收
如此工程師就專注撰寫程式即可
不用擔心記憶體回收不當 之類的問題